from fastapi import FastAPI, Request
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    CommandHandler,
    MessageHandler,
    filters,
)
import os

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ URL –≤–µ–±—Ö—É–∫–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # –ù–∞–ø—Ä–∏–º–µ—Ä: https://fifteen-savebot.onrender.com

# –°–æ–∑–¥–∞—ë–º FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI()

# –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä Application (–≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ä–æ–≥–æ Updater)
telegram_app = ApplicationBuilder().token(BOT_TOKEN).build()


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å—É–º–º—É –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è, –∞ —è —Ä–∞—Å—Å—á–∏—Ç–∞—é, —Å–∫–æ–ª—å–∫–æ –æ—Ç–ª–æ–∂–∏—Ç—å –ø–æ —Ç–≤–æ–µ–π —Å—Ö–µ–º–µ."
    )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ –∫–æ–º–∞–Ω–¥)"""
    try:
        amount = float(update.message.text.replace(",", "."))
        to_save, remaining = calculate_savings(amount)
        await update.message.reply_text(
            f"üí∞ –ü–æ—Å—Ç—É–ø–∏–ª–æ: {amount} –≥—Ä–Ω\n"
            f"üìå –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º: {to_save} –≥—Ä–Ω\n"
            f"ü™ô –û—Å—Ç–∞—Ç–æ–∫: {remaining} –≥—Ä–Ω"
        )
    except ValueError:
        await update.message.reply_text("‚ùå –í–≤–µ–¥–∏ —Å—É–º–º—É —á–∏—Å–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: 1500 –∏–ª–∏ 3000.50")


def calculate_savings(amount: float):
    """–õ–æ–≥–∏–∫–∞ —Ä–∞—Å—á—ë—Ç–∞ —Å—É–º–º—ã –¥–ª—è –æ—Ç–∫–ª–∞–¥—ã–≤–∞–Ω–∏—è"""
    if amount <= 2000:
        to_save = round(amount * 0.15, 2)
    else:
        to_save = round(amount * 0.10, 2)
    remaining = round(amount - to_save, 2)
    return to_save, remaining


# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
telegram_app.add_handler(CommandHandler("start", start))
telegram_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))


@app.on_event("startup")
async def startup():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±—Ö—É–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    webhook_url = f"{WEBHOOK_URL}/webhook"
    await telegram_app.bot.set_webhook(url=webhook_url)
    print(f"‚úÖ –í–µ–±—Ö—É–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")


@app.post("/webhook")
async def webhook_handler(request: Request):
    """–ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram"""
    data = await request.json()
    update = Update.de_json(data, telegram_app.bot)
    await telegram_app.process_update(update)
    return {"status": "ok"}


@app.get("/")
def root():
    """–ü—Ä–æ—Å—Ç–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞"""
    return {"status": "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"}
